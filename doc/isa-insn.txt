Values are shown in their natural big-endian representation.

Instruction 0xABCD, or 0baaaabbbbccccdddd:

           aaaa bbbb  cccc dddd
Bit        1111 1198  7654 3210
           5432 10

C syntax is used in explications; familiarity with it is assumed.

Ranges of [a:b] are inclusive of both endpoints (forgive me).

- I[15:12] == 0b0001   ( BITWISE INSTRUCTIONS )
	- I[3:0]: (D) Destination Register, LHS (0-15) 
	- I[7:4]: (S) Source Register, RHS (0-15)
	- I[11:8]: (M) Truth Table Number (0-15)
		- cf. https://en.wikipedia.org/wiki/Truth_table#Binary_operations
			0: F    1: NOR  2: NCI  3: ND
			4: NMI	5: NS	6: XOR	7: NAND
			8: AND	9: XNOR	10: S	11: MI
			12: D	13: CI	14: OR	15: T

- I[15:12] == 0b0010	( ARITHMETIC INSTRUCTIONS )
	- I[3:0]: (D) Destination Register, LHS (0-15)
	- I[7:4]: (S) Source Register, RHS (0-15)
	- I[10:8]: (M) Operation Number (0-7)
		- 0: Add (D = D + S)
		- 1: Sub (D = D - S)
		- 2: Shl (D = D << S, fill 0)
		- 3: Shr (D = D >> S, fill 0)
		- 4: Asr (D = D >> S, fill sign)
		- 5: Mul (D = D * S)
		- 6: Div (D = D / S)
		- 7: Mod (D = D % S)
		

- I[15:14] == 0b01    ( DATA TRANSFER INSTRUCTIONS )
    - I[3:0]: (D) Destination Register, LHS (0-15)
    - I[7:4]: (S) Source Register, RHS (0-15)
    - I[10]: (Dm) Destination indirect
    - I[9:8]: (Da) Destination increment mode 
    - I[13]: (Sm) Source indirect
    - I[12:11]: (Sa) Source increment mode

The _indirect bit_, if set, uses the register contents as a memory address and generates the appropriate load/store behavior.

The _increment mode_ is a two bit value interpreted as:

    - 0b00 - no change is made to the registers
    - 0b01 - autoincrement: increment the value of the register by $WORDBYTES after the memory operation
    - 0b10 - autodecrement: decrement the value of the register by $WORDBYTES before the operation
    - 0b11 - autopostdecrement: decrement the value of the register by $WORDBYTES after the memory operation


- I[15:12] == 0b0011	( COMPARISON INSTRUCTIONS )
	- I[3:0]: (D) Destination Register, LHS (0-15)
	- I[7:4]: (S) Source Register, RHS (0-15)
	- I[8]: EQ Flag: True when D = S
	- I[9]: GT Flag: True when D > S
	- I[10]: SN Flag: GT respects sign
	- I[11]: IV FLag: Test is inverted
		- I[11:8] table: (AB = "above", BL = "below", both unsigned)
			0: F	1: EQ	2: AB	3: ABE
			4: F	5: EQ	6: GT	7: GTE
			8: T	9: NEQ	10: BLE	11: BL
			12: T	13: NEQ	14: LT	15: LTE

- I[15:12] == 0b1000	( CONDITIONAL INSTRUCTIONS )
	- I[7:0]: (S) *Signed* Offset (in *Instructions*)
	- I[11:8]: (C) Comparison Register (0-15)
		- Condition is passed if reg is nonzero

- I[15:12] == 0b1001	( JUMP AND LINK )
	- I[3:0]: (L) Link Register (written, next PC) (0-15)
	- I[7:4]: (P) Program Register (read, new PC) (0-15)
	- I[11:8]: Reserved
